<div class="jumbotron">
    <div class="container">
        <h1>Hello, events team!</h1>
        <div class="row dark-bg">
            <div class="col-md-6">
                <h4>What/why?</h4>
                <p>Below are the current/upcoming events on the <a href="//www.zealoptics.com/events" target="_blank">ZealOptics.com/Events</a> page.</p>
            </div>
            <div class="col-md-6">
                <h4>Questions?</h4>
                <p>Email Alex (agoodwin@zealoptics.com) or Max (mleitch@zealoptics.com).</p>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row upcomingEventsHeader">
        <div class="col-xs-10">
            <h2>Upcoming Events</h2>
        </div>

        <div class="col-xs-2">
            <a href="/new" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-plus"></span> New Event
            </a>
        </div>
    </div>

    {{#each upcomingEvents}}
    <div class="row well event">
        <form class="col-xs-12 form-horizontal" method="post" action="/">
            <input type="hidden" name="id" value="{{this.id}}">
            <div class="col-md-7 col-md-offset-2 eventName">
                <h3>{{this.name}}</h3>
                <input type="text" class="hidden" value="{{this.name}}" name="name" readonly>
            </div>
            <div class="col-md-3 edit-delete">
                <a href="#" type="button" class="btn btn-default edit">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit
                </a>
                <a href="#" type="button" class="btn btn-default cancel hidden">
                    <span class="glyphicon glyphicon-remove-circle"></span> Cancel
                </a>
                <a href="#" type="button" class="btn btn-danger delete hidden">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete
                </a>
            </div>
            <div class="clearfix"></div>

            <!-- summary -->
            <div class="form-group summary">
                <label class="col-md-2 control-label" for="summary">Summary:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.summary}}" size="50" name="summary" readonly>
                </div>
            </div>

            <!-- location -->
            <div class="form-group location">
                <label class="col-md-2 control-label" for="location">Location:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.location}}" size="50" name="location" readonly>
                </div>
            </div>

            <!-- start/end -->
            <div class="form-group startEnd">
                <label class="col-md-2 control-label" for="dateStart">Dates/Times:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.dateStart}}" size="10" name="dateStart" readonly>
                    <input type="text" value="{{this.timeStart}}" size="5" name="timeStart" readonly> -
                    <input type="text" value="{{this.dateEnd}}" size="10" name="dateEnd" readonly>
                    <input type="text" value="{{this.timeEnd}}" size="5" name="timeEnd" readonly>
                </div>
            </div>

            <!-- Blog Url -->
            <div class="form-group blogUrl">
                <label class="col-md-2 control-label" for="blogUrl">Blog URL:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.blogPostUrl}}" size="50" name="blogUrl" readonly>
                </div>
            </div>

            <!-- External Url -->
            <div class="form-group externalUrl">
                <label class="col-md-2 control-label" for="externalUrl">External URL:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.externalUrl}}" size="50" name="externalUrl" readonly>
                </div>
            </div>

            <!-- Event Type -->
            <div class="form-group eventType">
                <label class="col-md-2 control-label" for="eventType">Event Type:</label>
                <div class="col-md-10">
                    <input type="text" value="{{this.eventType}}" size="50" name="eventType" readonly>
                </div>
            </div>

            <!-- Photos -->
            <div class="form-group photos">
                <label class="col-md-2 control-label" for="photos">Photos:</label>
                <div class="col-md-10">
                    <!-- form data dynamically scraped before submit -->
                    <div class="images dropzone">
                        <span class="featuredMessage">Featured Photo</span>
                        <div class="hidden featuredImageData">{{this.featuredImage}}</div>
                        {{#each this.photos}}
                        <div>
                            <a href="#" class="deletePhoto hidden" id="delete-photo-{{@index}}">X</a>
                            <img src="{{this}}" id="photo-{{@index}}">
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>

            <!-- Description -->
            <div class="form-group description">
                <label class="col-md-2 control-label" for="description">Description:</label>
                <div class="col-md-10">
                    <textarea rows="5" cols="50" name="description" readonly>{{this.description}}</textarea>
                </div>
            </div>

            <!-- submit -->
            <div class="form-group hidden submit">
                <div class="col-md-4 col-md-offset-4">
                    <input type="submit" class="btn btn-primary btn-lg btn-block" id="submitButton-{{@index}}" value="Submit">
                </div>
            </div>

        </form>
    </div>
    {{/each}}

    <hr>

    <h1>Past Events</h1> {{#each pastEvents}}
    <!-- temporarily redacted -->
    {{/each}}

    <hr>

    <footer>
        <p>&copy; Zeal Optics 2016</p>
    </footer>
</div>
<!-- /container -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="js/bootstrap-datepicker.min.js"></script>

<!-- google cloud api -->
<script src="https://apis.google.com/js/client.js?onload=handleClientLoad"></script>

<!-- dropzone -->
<script src="bower_components/dropzone/dist/dropzone.js"></script>

<!-- general -->
<script>
    window.jQuery || document.write('<script src="js/vendor/jquery-1.11.2.min.js"><\/script>')

    var myDropzone;

    $(function() {

        // highlight featured images for each event
        $('.featuredImageData').each(function() {
            let data = $(this).text().trim();
            $(this).parent().find('img[src="' + data + '"]').parent().addClass('featured');
        });

        // Disable auto discover for all elements:
        Dropzone.autoDiscover = false;

        /*
            "Edit" Functionality
                Clicking the edit button makes the event form active
                Input forms made editable
                Submit button appears
                Ability to add/delete images and change which is featured
        */
        $('a.edit').each(function() {
            $(this).click(function(e) {
                e.preventDefault();

                // the $('.event') element
                var activeEvent = $(this).parent().parent().parent();

                // create lightbox background
                $('body').prepend('<div id="lightboxBg"></div>');
                // move lightbox to correct y position
                $('#lightboxBg').css({
                    top: $(window).scrollTop()
                });
                // ability to close lightbox
                $('#lightboxBg').click(function() {
                    closeEdit(activeEvent);
                });
                // keep lightbox on user window
                $(window).scroll(function() {
                    $('#lightboxBg').css({
                        top: $(window).scrollTop()
                    });
                });
                // make event pop above lightbox
                $(activeEvent).css({
                    position: 'relative'
                });

                /* 
                    Activate Form
                */

                // hide edit and show cancel + delete buttons
                $(this).addClass('hidden');
                $(this).parent().find('a.cancel').removeClass('hidden');
                $(this).parent().find('a.cancel').click(function(e) {
                    e.preventDefault();
                    closeEdit(activeEvent);
                });
                $(this).parent().find('a.delete').removeClass('hidden');

                // enable submit button
                $(activeEvent).find('form').find('.submit').removeClass('hidden');

                // swap event title h3 for input
                $(activeEvent).find('.eventName h3').addClass('hidden');
                $(activeEvent).find('.eventName input').removeClass('hidden');

                // make all inputs editable
                $(activeEvent).find('input[type=text], textarea').each(function() {
                    this.readOnly = false;
                });

                /* 
                    Make images editable
                        Clicking on image makes it the "featured image"
                        Clicking the "x" deletes the image
                            * If it was featured, the first of the existing 
                              images is made to be the new featured
                */
                $(activeEvent).find('.images img').each(function() {
                    // allow for re-selection of featured image
                    $(this).click(function(e) {
                        featurePhoto($(this));
                    });

                    // allow for photos to be deleted
                    $(this).siblings('a.deletePhoto').removeClass('hidden');
                    $(this).siblings('a.deletePhoto').click(function(e) {
                        e.preventDefault();

                        deletePhoto($(this));
                    });
                });

                /*
                    Allow for photos to be added
                */
                var dz = $(activeEvent).find('.images');

                /*
                    Make sure myDropzone refers to the correct event
                */
                if (myDropzone) {
                    myDropzone.destroy();
                }
                myDropzone = new Dropzone(dz[0], {
                    url: "/photoUpload",
                    maxFilesize: 10, // mb
                    paramName: "file",
                    method: "post",
                    clickable: true,
                    acceptedFiles: 'image/*',
                    addRemoveLinks: true,
                    dictRemoveFile: "X",
                    dictCancelUpload: "X",
                    createImageThumbnails: false, // large images are memory-heavy
                    dictDefaultMessage: 'Drop files here or click the white space to upload. To select a featured image, click on it.'
                });

                myDropzone
                    .on('sending', function(file) {
                        // disable submit button until images are done uploaing/processing
                        $(activeEvent).find('input[type=submit]').prop('disabled', true);
                    })
                    .on('complete', function(file) {
                        var publicUrl = file.xhr.responseText,
                            imageHtml = '<a href="#" class="deletePhoto">X</a><img src="' + publicUrl + '">';

                        // replace preview with the new image
                        $(file.previewElement).html(imageHtml);

                        // register delete button event handler
                        $(file.previewElement).find('a.deletePhoto').click(function(e) {
                            e.preventDefault();

                            deletePhoto($(this));
                        });

                        // register 'featured' selection on image click
                        $(file.previewElement).find('img').click(function(e) {
                            e.preventDefault();
                            featurePhoto($(this));
                        });
                    })
                    .on('queuecomplete', function() {
                        // enable submit button once images are done uploaing/processing
                        $(activeEvent).find('input[type=submit]').prop('disabled', false);

                        // if no image is selected as featured, select the first image
                        if (!$(activeEvent).find('.images .featured')[0]) {
                            featurePhoto($(activeEvent).find('.images img')[0]);
                        }
                    });


                // allow for photos to be rearranged

                /* 
                    Form hijacking and data prep
                */
                $(activeEvent).find('form').on('submit', function(e) {
                    e.preventDefault();

                    var photos = [],
                        formData = $(this).serializeArray();

                    $(this).find('.images').find('img').each(function() {
                        photos.push($(this).attr('src'));
                    });

                    formData.push({
                        name: "photos",
                        value: JSON.stringify(photos)
                    });
                    formData.push({
                        name: "featuredImage",
                        value: $(this).find('.featuredImageData').text().trim()
                    });

                    // console.log(formData);

                    $.ajax({
                        async: true,
                        data: formData,
                        url: '/updateEvent',
                        dataType: 'json',
                        method: 'POST',
                        success: function(data, textStatus, jqXHR) {
                            console.log('event update response with status ' + textStatus + ' received:');
                            console.log(data.data);

                            // update form data with received updates

                            closeEdit(activeEvent);
                        },
                        error: function(jqXHR, errorType, exception) {
                            console.log('event update failed with status ' + errorType + ' received:');
                            console.log(jqXHR);
                            console.log(exception);
                        },
                        complete: function(jqXHR, textStatus) {
                            console.log('event update ajax event complete');
                        }
                    })
                });
            });
        });

        // delete event button functionality
        $('a.delete').each(function() {
            // delete button should delete event after "are you sure" prompt
            $(this).click(function(e) {
                e.preventDefault();

                var activeEvent = $(this).parent().parent().parent(),
                    eventIndex = $(activeEvent).find('input[name=id]').first().val();

                if (window.confirm("Are you sure you want to delete this event?")) {
                    $.ajax({
                        url: '/deleteEvent',
                        method: 'POST',
                        data: {
                            id: eventIndex
                        },
                        cache: false,
                        success: function(data, textStatus, jqXHR) {
                            alert('event successfully deleted');
                            $(activeEvent).fadeOut();
                            closeEdit($(activeEvent));
                        },
                        error: function(jqXHR, textStatus, errorThrown) {
                            alert('error while deleting event; see console.log()');
                            console.log('Error "'+textStatus+'" while deleting event:');
                            console.log(jqXHR);
                            console.log(errorThrown);
                        }
                    });
                }
            });
        });
    });

    function deletePhoto(photoDiv) {
        var thisParent = $(photoDiv).parent(),
            imagesDiv = $(thisParent).parent(),
            featuredData = $(imagesDiv).find('.featuredImageData'),
            firstPhoto;

        $(photoDiv).parent().remove();

        if ($(thisParent).hasClass('featured')) {
            // set first image to featured
            firstPhoto = $(imagesDiv).find('div:not(.featuredImageData)').first();

            $(firstPhoto).addClass('featured');
            $(featuredData).text($(firstPhoto).find('img').attr('src'));
        };
    }

    function featurePhoto(photo) {
        $(photo).parent().siblings().removeClass('featured');
        $(photo).parent().addClass('featured');
        $(photo).parent().parent().find('.featuredImageData').text($(this).attr('src'));
    }

    function openEdit(eventElement) {

    }

    function closeEdit(eventElement) {
        $('#lightboxBg').remove();
        $(eventElement).css({
            position: 'initial'
        });
        $(eventElement).find('form .submit').addClass('hidden');

        // hide delete & cancel buttons, show edit
        $(eventElement).find('a.delete').addClass('hidden');
        $(eventElement).find('a.cancel').addClass('hidden');
        $(eventElement).find('a.edit').removeClass('hidden');

        // swap event title input for h3
        $(eventElement).find('.eventName h3').removeClass('hidden');
        $(eventElement).find('.eventName input').addClass('hidden');

        // disable ability to edit inputs
        $(eventElement).find('input[type=text], textarea').each(function() {
            this.readOnly = true;
        });

        // destroy dropzone
        myDropzone.disable();

        // disable image editing
        $(eventElement).find('.images img').off('click');
        $(eventElement).find('.images a').addClass('hidden');
    }

</script>

<script src="js/vendor/bootstrap.min.js"></script>
